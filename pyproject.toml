[tool.poetry]
name = "shuffler"
version = "0.1"
description = "Concurrency fuzzer for Python"
authors = ["qweeze <qweeze@duck.com>"]
packages = [{ include = "shuffler" }]

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.7"
ipython = "^8.27.0"
ipdb = "^0.13.13"
mypy = "^1.11.2"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
sqlalchemy = "^2.0.35"
asyncpg = "^0.29.0"

[tool.ruff]
line-length = 88
target-version = 'py312'
respect-gitignore = true

[tool.ruff.lint]
ignore = [
  "ANN101",  # Annotate "self" argument  (FFS)
  "ANN102",  # Annotate "cls" argument  (FFS)
  "ANN401",  # Disallow "Any" generic
  "B008",  # Do not perform function call for default args definition
  "A003",  # bulitin shadowing for class attributes
  "PT012",  # pytest.raises should contain a single token of stmt
  "RET501",  # Explicit return None if it is the only possible value
  "RUF001", "RUF002", "RUF003",  # docstring related rules
  "Q000", "Q003",  # quotes
  "COM812",  # commas conflict
  "ASYNC109",  # Async function definition with a `timeout` parameter
  "PLR2004",  # Magic numbers
]
select = [
  "A",  # flake8-builtins
  "ANN",  # flake8-annotations
  "ARG",
  "ASYNC",  # flake8-async
  "B",  # flake8-bugbear
  "COM",  # flake8-commas
  "DTZ",  # flake8-datetimez
  "E",  # pycodestyle [Error]
  "ERA",  # eradicate
  "F",  # PyFlakes
  "I",  # isort
  "ICN001",  # flake8-import-conventions [Only disallow unconventional imports]
  "G002",  # flake8-logging-format [Only %s rule enforcement]
  "PERF",  # Perflint
  "PIE",  # flake8-pie
  "PL",  # PyLint [ALL]
  "PT01",  # flake8-pytest-style [exlcuded 00* block that forces strange
  "PT02",  # naming conventions and do not contribute anything meaningful :)]
  "PTH",  # flake8-use-pathlib
  "PYI",  # flake8-pyi
  "RET",  # flake8-return (controvertial, consider revisiting ruleset)
  "RSE",  # flake8-raise
  "RUF",  # Ruff specific rules
  "SIM2",  # flake8-simplify [conditional "expr" rules]
  "T20",  # flake8-print (LOL)
  "TID",  # flake8-tidy-imports,
  "Q",  # flake8-quotes
  "W",  # pycodestyle [Warning]
  "T100",  # flake8-debugger
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.isort]
force-to-top = ["src"]
known-local-folder = ["src"]
no-lines-before = ["future", "standard-library"]

[tool.ruff.lint.pylint]
max-args = 8

[tool.mypy]
python_version = '3.12'
strict = true
exclude = [
  "venv",
]
mypy_path = 'stubs'
explicit_package_bases = true

ignore_missing_imports = true

[tool.pytest.ini_options]
filterwarnings = ["ignore:::.*callee*"]
addopts = "--show-capture=log"
asyncio_mode = "auto"
pythonpath = [""]
asyncio_default_fixture_loop_scope = "function"
